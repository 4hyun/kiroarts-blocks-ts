{"version":3,"file":"community-board/view.js","mappings":";;;;;;;;;AAAA;;;;;;SCAA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNA;AACA;AACA;AAC4D;AAc5D,MAAME,QAAQ,GAAG;EACfC,KAAK,EAAE;IACL,IAAIC,SAASA,CAAA,EAAW;MACtB,OAAOD,KAAK,CAACE,MAAM,GAAGF,KAAK,CAACG,QAAQ,GAAGH,KAAK,CAACI,SAAS;IACxD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,MAAMC,OAAO,GAAGT,oEAAU,CAAU,CAAC;MACrCS,OAAO,CAACC,MAAM,GAAG,CAACD,OAAO,CAACC,MAAM;IAClC,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZT,KAAK,CAACE,MAAM,GAAG,CAACF,KAAK,CAACE,MAAM;IAC9B;EACF,CAAC;EACDQ,SAAS,EAAE;IACTC,SAAS,EAAEA,CAAA,KAAM;MACf,MAAM;QAAEH;MAAO,CAAC,GAAGV,oEAAU,CAAU,CAAC;MACxC;MACAc,OAAO,CAACC,GAAG,CAAC,YAAYL,MAAM,EAAE,CAAC;IACnC;EACF;AACF,CAAC;AAID,MAAM;EAAER;AAAM,CAAC,GAAGH,+DAAK,CAAQ,mCAAmC,EAAEE,QAAQ,CAAC,C","sources":["webpack://kiroart-blocks-ts/external module \"@wordpress/interactivity\"","webpack://kiroart-blocks-ts/webpack/bootstrap","webpack://kiroart-blocks-ts/webpack/runtime/make namespace object","webpack://kiroart-blocks-ts/./src/community-board/view.tsx"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getContext } from \"@wordpress/interactivity\"\n\ntype ServerState = {\n  state: {\n    isDark: boolean\n    darkText: string\n    lightText: string\n  }\n}\n\ntype Context = {\n  isOpen: boolean\n}\n\nconst storeDef = {\n  state: {\n    get themeText(): string {\n      return state.isDark ? state.darkText : state.lightText\n    },\n  },\n  actions: {\n    toggleOpen() {\n      const context = getContext<Context>()\n      context.isOpen = !context.isOpen\n    },\n    toggleTheme() {\n      state.isDark = !state.isDark\n    },\n  },\n  callbacks: {\n    logIsOpen: () => {\n      const { isOpen } = getContext<Context>()\n      // Log the value of `isOpen` each time it changes.\n      console.log(`Is open: ${isOpen}`)\n    },\n  },\n}\n\ntype Store = ServerState & typeof storeDef\n\nconst { state } = store<Store>(\"kiroart-blocks-ts/community-board\", storeDef)\n"],"names":["store","getContext","storeDef","state","themeText","isDark","darkText","lightText","actions","toggleOpen","context","isOpen","toggleTheme","callbacks","logIsOpen","console","log"],"sourceRoot":""}